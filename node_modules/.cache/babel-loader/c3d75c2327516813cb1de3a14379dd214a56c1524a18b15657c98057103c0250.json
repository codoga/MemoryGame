{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GuVeNBiL\\\\OneDrive\\\\Desktop\\\\Card Game\\\\my-card-game\\\\src\\\\components\\\\PlayGround.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { flipCard, checkMatch } from '../actions';\nimport { selectOpenedCards, selectScore } from '../reducers/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PlayGround extends React.Component {\n  componentDidMount() {\n    // Bileşen yüklendikten sonra yapılacak işlemler buraya\n    this.setState({\n      frameworks: ['angular2', 'vue', 'react', 'grunt', 'phantomjs', 'ember', 'babel', 'ionic', 'gulp', 'meteor', 'yeoman', 'yarn', 'nodejs', 'bower', 'browserify']\n    });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      frameworks: ['angular2', 'vue', 'react', 'grunt', 'phantomjs', 'ember', 'babel', 'ionic', 'gulp', 'meteor', 'yeoman', 'yarn', 'nodejs', 'bower', 'browserify'],\n      duplicatedFrameworks: [],\n      randomizedFrameworks: [],\n      openedFrameworks: [],\n      score: 0\n    };\n    this.state = {\n      frameworks: [],\n      duplicatedFrameworks: [],\n      randomizedFrameworks: [],\n      openedFrameworks: [],\n      score: 0\n    };\n  }\n  start() {\n    const {\n      frameworks\n    } = this.state;\n    const duplicatedFrameworks = frameworks.concat(frameworks);\n    const randomizedFrameworks = this.shuffle(duplicatedFrameworks);\n    this.setState({\n      duplicatedFrameworks,\n      randomizedFrameworks\n    });\n  }\n  shuffle(array) {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n  handleClick(name, index) {\n    const {\n      openedFrameworks,\n      flipCard,\n      checkMatch\n    } = this.props;\n    if (openedFrameworks.length === 2) {\n      setTimeout(() => {\n        checkMatch();\n      }, 750);\n    } else {\n      flipCard({\n        name,\n        index\n      });\n      if (openedFrameworks.length === 2) {\n        setTimeout(() => {\n          checkMatch();\n        }, 750);\n      }\n    }\n  }\n  render() {\n    const {\n      randomizedFrameworks\n    } = this.state;\n    const {\n      openedFrameworks\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground\",\n      children: randomizedFrameworks.map((name, index) => /*#__PURE__*/_jsxDEV(Card, {\n        framework: name,\n        index: index,\n        onClick: () => this.handleClick(name, index),\n        isOpen: openedFrameworks.includes(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  openedFrameworks: selectOpenedCards(state),\n  score: selectScore(state)\n});\nconst mapDispatchToProps = {\n  flipCard,\n  checkMatch\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayGround);\nclass Card extends React.Component {\n  render() {\n    const {\n      framework,\n      isOpen,\n      onClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${isOpen ? 'opened' : ''}`,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://raw.githubusercontent.com/samiheikki/javascript-guessing-game/master/static/logos/${framework}.png`,\n          alt: framework\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","connect","flipCard","checkMatch","selectOpenedCards","selectScore","jsxDEV","_jsxDEV","PlayGround","Component","componentDidMount","setState","frameworks","constructor","props","state","duplicatedFrameworks","randomizedFrameworks","openedFrameworks","score","start","concat","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","handleClick","name","index","setTimeout","render","className","children","map","Card","framework","onClick","isOpen","includes","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","mapDispatchToProps","src","alt"],"sources":["C:/Users/GuVeNBiL/OneDrive/Desktop/Card Game/my-card-game/src/components/PlayGround.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { flipCard, checkMatch } from '../actions';\r\nimport { selectOpenedCards, selectScore } from '../reducers/selectors';\r\n\r\nclass PlayGround extends React.Component {\r\n    state = {\r\n        frameworks: ['angular2', 'vue', 'react', 'grunt', 'phantomjs', 'ember', 'babel', 'ionic', 'gulp', 'meteor', 'yeoman', 'yarn', 'nodejs', 'bower', 'browserify'],\r\n        duplicatedFrameworks: [],\r\n        randomizedFrameworks: [],\r\n        openedFrameworks: [],\r\n        score: 0\r\n      \r\n    };\r\n    componentDidMount() {\r\n        // Bileşen yüklendikten sonra yapılacak işlemler buraya\r\n        this.setState({\r\n          frameworks: ['angular2', 'vue', 'react', 'grunt', 'phantomjs', 'ember', 'babel', 'ionic', 'gulp', 'meteor', 'yeoman', 'yarn', 'nodejs', 'bower', 'browserify']\r\n        });\r\n      }\r\n      \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          frameworks: [],\r\n          duplicatedFrameworks: [],\r\n          randomizedFrameworks: [],\r\n          openedFrameworks: [],\r\n          score: 0\r\n        };\r\n      }\r\n\r\n \r\n\r\n  start() {\r\n    const { frameworks } = this.state;\r\n    const duplicatedFrameworks = frameworks.concat(frameworks);\r\n    const randomizedFrameworks = this.shuffle(duplicatedFrameworks);\r\n    this.setState({\r\n      duplicatedFrameworks,\r\n      randomizedFrameworks,\r\n    });\r\n  }\r\n\r\n  shuffle(array) {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  handleClick(name, index) {\r\n    const { openedFrameworks, flipCard, checkMatch } = this.props;\r\n    if (openedFrameworks.length === 2) {\r\n      setTimeout(() => {\r\n        checkMatch();\r\n      }, 750);\r\n    } else {\r\n      flipCard({ name, index });\r\n      if (openedFrameworks.length === 2) {\r\n        setTimeout(() => {\r\n          checkMatch();\r\n        }, 750);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { randomizedFrameworks } = this.state;\r\n    const { openedFrameworks } = this.props;\r\n\r\n    return (\r\n      <div className=\"playground\">\r\n        {randomizedFrameworks.map((name, index) => (\r\n          <Card key={index} framework={name} index={index} onClick={() => this.handleClick(name, index)} isOpen={openedFrameworks.includes(index)} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  openedFrameworks: selectOpenedCards(state),\r\n  score: selectScore(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  flipCard,\r\n  checkMatch,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayGround);\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    const { framework, isOpen, onClick } = this.props;\r\n    return (\r\n      <div className={`card ${isOpen ? 'opened' : ''}`} onClick={onClick}>\r\n        <div className=\"front\">\r\n          ?\r\n        </div>\r\n        <div className=\"back\">\r\n          <img src={`https://raw.githubusercontent.com/samiheikki/javascript-guessing-game/master/static/logos/${framework}.png`} alt={framework} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}