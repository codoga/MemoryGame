{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialState = {\n  cards: generateShuffledCards(),\n  flippedCards: [],\n  matchedCards: [],\n  score: 0\n};\nconst cardsReducer = (state = initialState.cards, action) => {\n  switch (action.type) {\n    case 'RESET_GAME':\n      return generateShuffledCards();\n    default:\n      return state;\n  }\n};\nconst flippedCardsReducer = (state = initialState.flippedCards, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      return [...state, action.id];\n    case 'RESET_GAME':\n      return [];\n    default:\n      return state;\n  }\n};\nconst matchedCardsReducer = (state = initialState.matchedCards, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      if (state.length === 2) {\n        const [firstCard, secondCard] = state;\n        if (state.cards[firstCard] === state.cards[secondCard]) {\n          return [...state, firstCard, secondCard];\n        }\n      }\n      return state;\n    case 'RESET_GAME':\n      return [];\n    default:\n      return state;\n  }\n};\nconst scoreReducer = (state = initialState.score, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      if (state.flippedCards.length === 2) {\n        const [firstCard, secondCard] = state.flippedCards;\n        if (state.cards[firstCard] === state.cards[secondCard]) {\n          return state + 50;\n        } else {\n          return state - 10;\n        }\n      }\n      return state;\n    case 'RESET_GAME':\n      return 0;\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  cards: cardsReducer,\n  flippedCards: flippedCardsReducer,\n  matchedCards: matchedCardsReducer,\n  score: scoreReducer\n});","map":{"version":3,"names":["combineReducers","initialState","cards","generateShuffledCards","flippedCards","matchedCards","score","cardsReducer","state","action","type","flippedCardsReducer","id","matchedCardsReducer","length","firstCard","secondCard","scoreReducer"],"sources":["C:/Users/GuVeNBiL/OneDrive/Desktop/Card Game/my-card-game/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst initialState = {\r\n  cards: generateShuffledCards(),\r\n  flippedCards: [],\r\n  matchedCards: [],\r\n  score: 0\r\n};\r\n\r\nconst cardsReducer = (state = initialState.cards, action) => {\r\n  switch(action.type) {\r\n    case 'RESET_GAME':\r\n      return generateShuffledCards();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst flippedCardsReducer = (state = initialState.flippedCards, action) => {\r\n  switch(action.type) {\r\n    case 'FLIP_CARD':\r\n      return [...state, action.id];\r\n    case 'RESET_GAME':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst matchedCardsReducer = (state = initialState.matchedCards, action) => {\r\n  switch(action.type) {\r\n    case 'FLIP_CARD':\r\n      if (state.length === 2) {\r\n        const [firstCard, secondCard] = state;\r\n        if (state.cards[firstCard] === state.cards[secondCard]) {\r\n          return [...state, firstCard, secondCard];\r\n        }\r\n      }\r\n      return state;\r\n    case 'RESET_GAME':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst scoreReducer = (state = initialState.score, action) => {\r\n  switch(action.type) {\r\n    case 'FLIP_CARD':\r\n      if (state.flippedCards.length === 2) {\r\n        const [firstCard, secondCard] = state.flippedCards;\r\n        if (state.cards[firstCard] === state.cards[secondCard]) {\r\n          return state + 50;\r\n        } else {\r\n          return state - 10;\r\n        }\r\n      }\r\n      return state;\r\n    case 'RESET_GAME':\r\n      return 0;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  flippedCards: flippedCardsReducer,\r\n  matchedCards: matchedCardsReducer,\r\n  score: scoreReducer\r\n});\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAEvC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,qBAAqB,CAAC,CAAC;EAC9BC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGP,YAAY,CAACC,KAAK,EAAEO,MAAM,KAAK;EAC3D,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,YAAY;MACf,OAAOP,qBAAqB,CAAC,CAAC;IAChC;MACE,OAAOK,KAAK;EAChB;AACF,CAAC;AAED,MAAMG,mBAAmB,GAAGA,CAACH,KAAK,GAAGP,YAAY,CAACG,YAAY,EAAEK,MAAM,KAAK;EACzE,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MACd,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACG,EAAE,CAAC;IAC9B,KAAK,YAAY;MACf,OAAO,EAAE;IACX;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMK,mBAAmB,GAAGA,CAACL,KAAK,GAAGP,YAAY,CAACI,YAAY,EAAEI,MAAM,KAAK;EACzE,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MACd,IAAIF,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;QACtB,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGR,KAAK;QACrC,IAAIA,KAAK,CAACN,KAAK,CAACa,SAAS,CAAC,KAAKP,KAAK,CAACN,KAAK,CAACc,UAAU,CAAC,EAAE;UACtD,OAAO,CAAC,GAAGR,KAAK,EAAEO,SAAS,EAAEC,UAAU,CAAC;QAC1C;MACF;MACA,OAAOR,KAAK;IACd,KAAK,YAAY;MACf,OAAO,EAAE;IACX;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,MAAMS,YAAY,GAAGA,CAACT,KAAK,GAAGP,YAAY,CAACK,KAAK,EAAEG,MAAM,KAAK;EAC3D,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MACd,IAAIF,KAAK,CAACJ,YAAY,CAACU,MAAM,KAAK,CAAC,EAAE;QACnC,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACJ,YAAY;QAClD,IAAII,KAAK,CAACN,KAAK,CAACa,SAAS,CAAC,KAAKP,KAAK,CAACN,KAAK,CAACc,UAAU,CAAC,EAAE;UACtD,OAAOR,KAAK,GAAG,EAAE;QACnB,CAAC,MAAM;UACL,OAAOA,KAAK,GAAG,EAAE;QACnB;MACF;MACA,OAAOA,KAAK;IACd,KAAK,YAAY;MACf,OAAO,CAAC;IACV;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,eAAeR,eAAe,CAAC;EAC7BE,KAAK,EAAEK,YAAY;EACnBH,YAAY,EAAEO,mBAAmB;EACjCN,YAAY,EAAEQ,mBAAmB;EACjCP,KAAK,EAAEW;AACT,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}