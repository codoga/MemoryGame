{"ast":null,"code":"import { combineReducers } from 'redux';\nimport generateShuffledCards from '../utils/generateShuffledCards';\nconst initialState = {\n  cards: generateShuffledCards(),\n  flippedCards: [],\n  matchedCards: [],\n  score: 0\n};\nconst cardsReducer = (state = initialState.cards, action) => {\n  switch (action.type) {\n    case 'RESET_GAME':\n      return generateShuffledCards();\n    default:\n      return state;\n  }\n};\nconst flippedCardsReducer = (state = initialState.flippedCards, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      if (state.length < 2) {\n        return [...state, action.id];\n      }\n      return state;\n    case 'CHECK_MATCH':\n      return [];\n    case 'RESET_GAME':\n      return [];\n    default:\n      return state;\n  }\n};\nconst matchedCardsReducer = (state = initialState.matchedCards, action) => {\n  switch (action.type) {\n    case 'CHECK_MATCH':\n      const [firstCard, secondCard] = action.flippedCards;\n      if (action.cards[firstCard] === action.cards[secondCard]) {\n        return [...state, firstCard, secondCard];\n      }\n      return state;\n    case 'RESET_GAME':\n      return [];\n    default:\n      return state;\n  }\n};\nconst scoreReducer = (state = initialState.score, action) => {\n  switch (action.type) {\n    case 'CHECK_MATCH':\n      const [firstCard, secondCard] = action.flippedCards;\n      if (action.cards[firstCard] === action.cards[secondCard]) {\n        return state + 50;\n      } else {\n        return state - 10;\n      }\n    case 'RESET_GAME':\n      return 0;\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  cards: cardsReducer,\n  flippedCards: flippedCardsReducer,\n  matchedCards: matchedCardsReducer,\n  score: scoreReducer\n});","map":{"version":3,"names":["combineReducers","generateShuffledCards","initialState","cards","flippedCards","matchedCards","score","cardsReducer","state","action","type","flippedCardsReducer","length","id","matchedCardsReducer","firstCard","secondCard","scoreReducer"],"sources":["C:/Users/GuVeNBiL/OneDrive/Desktop/Card Game/my-card-game/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from 'redux';\r\nimport generateShuffledCards from '../utils/generateShuffledCards';\r\n\r\nconst initialState = {\r\n  cards: generateShuffledCards(),\r\n  flippedCards: [],\r\n  matchedCards: [],\r\n  score: 0\r\n};\r\n\r\nconst cardsReducer = (state = initialState.cards, action) => {\r\n  switch(action.type) {\r\n    case 'RESET_GAME':\r\n      return generateShuffledCards();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst flippedCardsReducer = (state = initialState.flippedCards, action) => {\r\n  switch(action.type) {\r\n    case 'FLIP_CARD':\r\n      if (state.length < 2) {\r\n        return [...state, action.id];\r\n      }\r\n      return state;\r\n    case 'CHECK_MATCH':\r\n      return [];\r\n    case 'RESET_GAME':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst matchedCardsReducer = (state = initialState.matchedCards, action) => {\r\n  switch(action.type) {\r\n    case 'CHECK_MATCH':\r\n      const [firstCard, secondCard] = action.flippedCards;\r\n      if (action.cards[firstCard] === action.cards[secondCard]) {\r\n        return [...state, firstCard, secondCard];\r\n      }\r\n      return state;\r\n    case 'RESET_GAME':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst scoreReducer = (state = initialState.score, action) => {\r\n  switch(action.type) {\r\n    case 'CHECK_MATCH':\r\n      const [firstCard, secondCard] = action.flippedCards;\r\n      if (action.cards[firstCard] === action.cards[secondCard]) {\r\n        return state + 50;\r\n      } else {\r\n        return state - 10;\r\n      }\r\n    case 'RESET_GAME':\r\n      return 0;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  flippedCards: flippedCardsReducer,\r\n  matchedCards: matchedCardsReducer,\r\n  score: scoreReducer\r\n});\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,qBAAqB,MAAM,gCAAgC;AAElE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEF,qBAAqB,CAAC,CAAC;EAC9BG,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGN,YAAY,CAACC,KAAK,EAAEM,MAAM,KAAK;EAC3D,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,YAAY;MACf,OAAOT,qBAAqB,CAAC,CAAC;IAChC;MACE,OAAOO,KAAK;EAChB;AACF,CAAC;AAED,MAAMG,mBAAmB,GAAGA,CAACH,KAAK,GAAGN,YAAY,CAACE,YAAY,EAAEK,MAAM,KAAK;EACzE,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MACd,IAAIF,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO,CAAC,GAAGJ,KAAK,EAAEC,MAAM,CAACI,EAAE,CAAC;MAC9B;MACA,OAAOL,KAAK;IACd,KAAK,aAAa;MAChB,OAAO,EAAE;IACX,KAAK,YAAY;MACf,OAAO,EAAE;IACX;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,MAAMM,mBAAmB,GAAGA,CAACN,KAAK,GAAGN,YAAY,CAACG,YAAY,EAAEI,MAAM,KAAK;EACzE,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,aAAa;MAChB,MAAM,CAACK,SAAS,EAAEC,UAAU,CAAC,GAAGP,MAAM,CAACL,YAAY;MACnD,IAAIK,MAAM,CAACN,KAAK,CAACY,SAAS,CAAC,KAAKN,MAAM,CAACN,KAAK,CAACa,UAAU,CAAC,EAAE;QACxD,OAAO,CAAC,GAAGR,KAAK,EAAEO,SAAS,EAAEC,UAAU,CAAC;MAC1C;MACA,OAAOR,KAAK;IACd,KAAK,YAAY;MACf,OAAO,EAAE;IACX;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,MAAMS,YAAY,GAAGA,CAACT,KAAK,GAAGN,YAAY,CAACI,KAAK,EAAEG,MAAM,KAAK;EAC3D,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,aAAa;MAChB,MAAM,CAACK,SAAS,EAAEC,UAAU,CAAC,GAAGP,MAAM,CAACL,YAAY;MACnD,IAAIK,MAAM,CAACN,KAAK,CAACY,SAAS,CAAC,KAAKN,MAAM,CAACN,KAAK,CAACa,UAAU,CAAC,EAAE;QACxD,OAAOR,KAAK,GAAG,EAAE;MACnB,CAAC,MAAM;QACL,OAAOA,KAAK,GAAG,EAAE;MACnB;IACF,KAAK,YAAY;MACf,OAAO,CAAC;IACV;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,eAAeR,eAAe,CAAC;EAC7BG,KAAK,EAAEI,YAAY;EACnBH,YAAY,EAAEO,mBAAmB;EACjCN,YAAY,EAAES,mBAAmB;EACjCR,KAAK,EAAEW;AACT,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}